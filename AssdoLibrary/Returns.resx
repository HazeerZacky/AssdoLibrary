<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAbsAAAG7ATrs4+IAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEOUlEQVR4XuWaTWgcZRjHd6VQUEtb1KZtSnZmNmrRkzfbHtpCeylCbx7MSVTEgyKoPXnIoYdKkWDI
        zOxSBNteQil4aklBUHpQtOIHCn6CoAdjKiZ530lTUpPp82Znlpln/sl+zbzZnTn8dnf++7zP+/6Hmfdr
        puT7fqGBYpGAYpGAYpGAYpGAYpGAYtYcG/e3GY48OnR+9iH0v06gmCUjNfmU6civCZ/4AsXoBIpZUBr3
        HzBd7y0yvRyYX4fH6QaKaTPiLFhk9mbUeAiP1Q0U08Rw5atkVHLjITxeN1BMgwPunWEyOMMNc3g53UCx
        VyzXGyNz89wsgpfVDRS7ZXRSPkamrnKTm8Fz6AaK3WBMidNk6B9usBU8j26g2AlW/b+dpiMuInPtwPPp
        BortYjneCTLxJzfVCTynbqDYiv11/0Fq/BSxFjXTDTy3bqC4GVVbHKaG/8aNdAvPrxsoIkYn/e10yZ+j
        Rq9yE73A69ENFDkVd+kZauwPvPGp4Mq/6PuG5cgJ0xavVF1xhKbOu1E7sgCKIWrZSo17l1hpNlgffxNX
        KrY8jtqWFlBUGHVxkIa3r1ijtgTDkT9arnztaXvuYdTWXkBC2XC8N6ni2LK1T1g0bfmBVVt8nLe7W2IH
        hjtvUCWfsUr7kRXT9t6mRpej7e+G5g+63F+mxIJV1O/MVF25J2qoU0qG7e01bHENJB8MbDlr1ryTyFw7
        lCjB5zDxYLFGS/D31KiFTG4GXfrNDcocIC6Tq476hVKlvrRvoG+BJJPI6EY0fwxoJwixbDkeNbkZsYMB
        GgZbYrjyjai3jUBCP0+EOkF1jGPcHweKin6aCveANKeWK8hfCBRDtngxlAqWI64jbyFQ5GS6HNaA5Xgv
        IF8KKCKy2hCx6ssjVm3pFA3FZ9Q4Ttq3xN1oTArMDU+JR5CvhNAKHVti6mSbrnw+mJ/8z8t0h7iE6koI
        7aBzU1StVdTKj2J7vgXVbhPPHzvoFN3b4pYrnqMyP/Mc7WI58mOeM3bQDbofjAQj0+vEv9E8bbI6Wl+o
        RvPFkveC7kdjxsT8Ljrx71OOezxnC2JrhVjSXtmKh6OVmjhkOt4fKPcGSHXywvKJhGmg+/F44zaU0zz3
        RqghNyybSJYWW/GCBM36XqSrwUP1MH4NyySSpI3uV2TWZ61qmwzUFSNYI8AkaaP7JSnV0xuO/B3V18QW
        L6lYmCALdL8mZ17whij/N9G6GNMqDhbOEvai5HcoJi2e/PD2DuoTvgzq4tymoHKikA4ar8ouPpvFoy7O
        E3XxKJn9hZlfR/UXsFDeCLb61MPW2AlQHTQskEeCPY34MtuVZ2FwXgk64chVID6CgXmFPspk/NPmCXDl
        J4mgvBPcCo0TYMufYFDeIfPfBydBwoC8Q/f+O40rQNyCAXmHPspqGa3mIYk/iwYUiwQUiwQUiwQUiwQU
        i4Nfug+KpLfdAk5gTAAAAABJRU5ErkJggg==
</value>
  </data>
</root>